// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageProtoBuf.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "MessageProtoBuf.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - MessageProtoBufRoot

@implementation MessageProtoBufRoot

// No extensions in the file and no imports, so no need to generate
// +extensionRegistry.

@end

#pragma mark - MessageProtoBufRoot_FileDescriptor

static GPBFileDescriptor *MessageProtoBufRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"proto"
                                                     syntax:GPBFileSyntaxProto2];
  }
  return descriptor;
}

#pragma mark - ProtoMessage

@implementation ProtoMessage

@dynamic hasType, type;
@dynamic hasFrom, from;
@dynamic hasTo, to;
@dynamic hasTime, time;
@dynamic hasBody, body;

typedef struct ProtoMessage__storage_ {
  uint32_t _has_storage_[1];
  ProtoMessage_Type type;
  NSString *from;
  NSString *to;
  NSString *time;
  NSString *body;
} ProtoMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescriptionWithDefault fields[] = {
      {
        .defaultValue.valueEnum = ProtoMessage_Type_Chat,
        .core.name = "type",
        .core.dataTypeSpecific.enumDescFunc = ProtoMessage_Type_EnumDescriptor,
        .core.number = ProtoMessage_FieldNumber_Type,
        .core.hasIndex = 0,
        .core.offset = (uint32_t)offsetof(ProtoMessage__storage_, type),
        .core.flags = (GPBFieldFlags)(GPBFieldRequired | GPBFieldHasDefaultValue | GPBFieldHasEnumDescriptor),
        .core.dataType = GPBDataTypeEnum,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "from",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ProtoMessage_FieldNumber_From,
        .core.hasIndex = 1,
        .core.offset = (uint32_t)offsetof(ProtoMessage__storage_, from),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "to",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ProtoMessage_FieldNumber_To,
        .core.hasIndex = 2,
        .core.offset = (uint32_t)offsetof(ProtoMessage__storage_, to),
        .core.flags = GPBFieldOptional,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "time",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ProtoMessage_FieldNumber_Time,
        .core.hasIndex = 3,
        .core.offset = (uint32_t)offsetof(ProtoMessage__storage_, time),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeString,
      },
      {
        .defaultValue.valueString = nil,
        .core.name = "body",
        .core.dataTypeSpecific.className = NULL,
        .core.number = ProtoMessage_FieldNumber_Body,
        .core.hasIndex = 4,
        .core.offset = (uint32_t)offsetof(ProtoMessage__storage_, body),
        .core.flags = GPBFieldRequired,
        .core.dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[ProtoMessage class]
                                     rootClass:[MessageProtoBufRoot class]
                                          file:MessageProtoBufRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescriptionWithDefault))
                                   storageSize:sizeof(ProtoMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_FieldsWithDefault];
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - Enum ProtoMessage_Type

GPBEnumDescriptor *ProtoMessage_Type_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Login\000Chat\000LoginResponse\000ChatResponse\000Jo"
        "inGroupNotify\000QuitGroupNotify\000SomeoneJoi"
        "nNotify\000DismissGroupNotify\000UpdateGroupNo"
        "tify\000NoGroupNotify\000";
    static const int32_t values[] = {
        ProtoMessage_Type_Login,
        ProtoMessage_Type_Chat,
        ProtoMessage_Type_LoginResponse,
        ProtoMessage_Type_ChatResponse,
        ProtoMessage_Type_JoinGroupNotify,
        ProtoMessage_Type_QuitGroupNotify,
        ProtoMessage_Type_SomeoneJoinNotify,
        ProtoMessage_Type_DismissGroupNotify,
        ProtoMessage_Type_UpdateGroupNotify,
        ProtoMessage_Type_NoGroupNotify,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(ProtoMessage_Type)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:ProtoMessage_Type_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL ProtoMessage_Type_IsValidValue(int32_t value__) {
  switch (value__) {
    case ProtoMessage_Type_Login:
    case ProtoMessage_Type_Chat:
    case ProtoMessage_Type_LoginResponse:
    case ProtoMessage_Type_ChatResponse:
    case ProtoMessage_Type_JoinGroupNotify:
    case ProtoMessage_Type_QuitGroupNotify:
    case ProtoMessage_Type_SomeoneJoinNotify:
    case ProtoMessage_Type_DismissGroupNotify:
    case ProtoMessage_Type_UpdateGroupNotify:
    case ProtoMessage_Type_NoGroupNotify:
      return YES;
    default:
      return NO;
  }
}


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
